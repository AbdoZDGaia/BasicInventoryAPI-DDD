// <auto-generated />
using System;
using Inventory.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory.Api.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Inventory.Domain.Domains.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Category 1",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Category 2",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Category 3",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Inventory.Domain.Domains.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "Barcode 1",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2077),
                            Description = "Description 1",
                            IsDeleted = false,
                            ProductName = "Product 1",
                            ProductStatusId = 1,
                            Weight = 4.1m
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "Barcode 2",
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2087),
                            Description = "Description 2",
                            IsDeleted = false,
                            ProductName = "Product 2",
                            ProductStatusId = 2,
                            Weight = 4.2m
                        },
                        new
                        {
                            Id = 3,
                            Barcode = "Barcode 3",
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2091),
                            Description = "Description 3",
                            IsDeleted = false,
                            ProductName = "Product 3",
                            ProductStatusId = 3,
                            Weight = 4.3m
                        },
                        new
                        {
                            Id = 4,
                            Barcode = "Barcode 4",
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2092),
                            Description = "Description 4",
                            IsDeleted = false,
                            ProductName = "Product 4",
                            ProductStatusId = 3,
                            Weight = 4.4m
                        },
                        new
                        {
                            Id = 5,
                            Barcode = "Barcode 5",
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2094),
                            Description = "Description 5",
                            IsDeleted = false,
                            ProductName = "Product 5",
                            ProductStatusId = 2,
                            Weight = 4.5m
                        },
                        new
                        {
                            Id = 6,
                            Barcode = "Barcode 6",
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2095),
                            Description = "Description 6",
                            IsDeleted = false,
                            ProductName = "Product 6",
                            ProductStatusId = 2,
                            Weight = 4.6m
                        },
                        new
                        {
                            Id = 7,
                            Barcode = "Barcode 7",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2097),
                            Description = "Description 7",
                            IsDeleted = false,
                            ProductName = "Product 7",
                            ProductStatusId = 1,
                            Weight = 4.7m
                        },
                        new
                        {
                            Id = 8,
                            Barcode = "Barcode 8",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2098),
                            Description = "Description 8",
                            IsDeleted = false,
                            ProductName = "Product 8",
                            ProductStatusId = 1,
                            Weight = 4.8m
                        },
                        new
                        {
                            Id = 9,
                            Barcode = "Barcode 9",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2022, 6, 7, 19, 53, 30, 323, DateTimeKind.Local).AddTicks(2101),
                            Description = "Description 9",
                            IsDeleted = false,
                            ProductName = "Product 9",
                            ProductStatusId = 1,
                            Weight = 4.9m
                        });
                });

            modelBuilder.Entity("Inventory.Domain.Domains.ProductStatuses.ProductStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            StatusName = "Sold"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            StatusName = "InStock"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            StatusName = "Damaged"
                        });
                });

            modelBuilder.Entity("Inventory.Domain.Domains.Products.Product", b =>
                {
                    b.HasOne("Inventory.Domain.Domains.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Domain.Domains.ProductStatuses.ProductStatus", "ProductStatus")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductStatus");
                });

            modelBuilder.Entity("Inventory.Domain.Domains.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Inventory.Domain.Domains.ProductStatuses.ProductStatus", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
